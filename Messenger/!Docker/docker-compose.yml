version: '2.1'
services:
  msgdb-node-1:
    build:
      context: mysql
      dockerfile: Dockerfile
    container_name: msgdb-node-1
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: msgdb
      MYSQL_USER: msguser
      MYSQL_PASSWORD: msguser
      MYSQL_ROOT_PASSWORD: '1'
    command: >
      --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
      --general-log=ON
      --log-queries-not-using-indexes=ON
    networks:
      - msg-network
    ports:
      - 3360:3306
    healthcheck:
      test: "/usr/bin/mysql --user=msguser --password=msguser --execute \"SHOW DATABASES;\""
      timeout: 20s
      retries: 20
    volumes:
      - msgdb-n1-data:/var/lib/mysql
  msgdb-node-2:
    build:
      context: mysql
      dockerfile: Dockerfile
    container_name: msgdb-node-2
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: msgdb
      MYSQL_USER: msguser
      MYSQL_PASSWORD: msguser
      MYSQL_ROOT_PASSWORD: '1'
    command: >
      --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
      --general-log=ON
      --log-queries-not-using-indexes=ON
    networks:
      - msg-network
    ports:
      - 3361:3306
    healthcheck:
      test: "/usr/bin/mysql --user=msguser --password=msguser --execute \"SHOW DATABASES;\""
      timeout: 20s
      retries: 20
    volumes:
      - msgdb-n2-data:/var/lib/mysql
  proxysql:
    build:
      context: proxysql
      dockerfile: Dockerfile
    container_name: proxysql
    command: >
      --initial
    volumes:
      - proxysql-data:/var/lib/proxysql
    healthcheck:
      test: "/usr/bin/mysql --user=msguser --password=msguser --execute \"SHOW DATABASES;\""
      timeout: 20s
      retries: 10
    networks:
      - msg-network
    ports:
      # Mysql Client Port
      - "6033:6033"
      # Mysql Admin Port
      - "6032:6032"
    depends_on:
      msgdb-node-1:
        condition: service_healthy
      msgdb-node-2:
        condition: service_healthy
  user_service:
    build:
      context: UserService
      dockerfile: Dockerfile
    container_name: user_service
    restart: unless-stopped
    environment:
      - DB_HOST=proxysql
      - DB_PORT=6033
      - DB_LOGIN=msguser
      - DB_PASSWORD=msguser
      - DB_DATABASE=msgdb
    ports:
      - 8080:8080
    networks:
      - msg-network
    depends_on:
      proxysql:
        condition: service_started
  group_service:
    build:
      context: GroupService
      dockerfile: Dockerfile
    container_name: group_service
    restart: unless-stopped
    environment:
      - SERVICE_HOST=user_service
      - DB_HOST=proxysql
      - DB_PORT=6033
      - DB_LOGIN=msguser
      - DB_PASSWORD=msguser
      - DB_DATABASE=msgdb
    ports:
      - 8081:8081
    networks:
      - msg-network
    depends_on:
      user_service:
        condition: service_started
  p2p_service:
    build:
      context: P2PService
      dockerfile: Dockerfile
    container_name: p2p_service
    restart: unless-stopped
    environment:
      - SERVICE_HOST=user_service
      - DB_HOST=proxysql
      - DB_PORT=6033
      - DB_LOGIN=msguser
      - DB_PASSWORD=msguser
      - DB_DATABASE=msgdb
    ports:
      - 8082:8082
    networks:
      - msg-network
    depends_on:
      user_service:
        condition: service_started
volumes:
  msgdb-n1-data:
  msgdb-n2-data:
  proxysql-data:
networks:
  msg-network:
    driver: "bridge"
    external: false